"""Add last_modified to Booking table

Revision ID: a7b371de7b45
Revises: 435ead8519eb
Create Date: 2025-06-07 17:50:19.274385

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


# revision identifiers, used by Alembic.
revision = 'a7b371de7b45'
down_revision = '435ead8519eb'
branch_labels = None
depends_on = None


def upgrade():
    bind = op.get_bind()
    inspector = inspect(bind)
    all_tables = inspector.get_table_names()

    # 1. Create 'resource_pin' table if it doesn't exist
    if 'resource_pin' not in all_tables:
        op.create_table('resource_pin',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('resource_id', sa.Integer(), nullable=False),
            sa.Column('pin_value', sa.String(length=255), nullable=False),
            sa.Column('is_active', sa.Boolean(), nullable=False),
            sa.Column('created_at', sa.DateTime(), nullable=False),
            sa.Column('notes', sa.String(length=500), nullable=True),
            sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], ),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('resource_id', 'pin_value', name='uq_resource_pin_value')
        )

    # 2. Add 'last_modified' to 'booking' table
    # Ensure 'booking' table exists before trying to get its columns
    if 'booking' in all_tables:
        booking_columns = [col['name'] for col in inspector.get_columns('booking')]
        if 'last_modified' not in booking_columns:
            with op.batch_alter_table('booking', schema=None) as batch_op:
                batch_op.add_column(sa.Column('last_modified', sa.DateTime(), nullable=False, server_default=sa.func.now()))

    # 3. Add columns to 'booking_settings' table
    # Ensure 'booking_settings' table exists
    if 'booking_settings' in all_tables:
        booking_settings_columns = [col['name'] for col in inspector.get_columns('booking_settings')]

        columns_to_add_to_booking_settings = {
            'check_in_minutes_before': sa.Column('check_in_minutes_before', sa.Integer(), nullable=False, server_default='15'),
            'check_in_minutes_after': sa.Column('check_in_minutes_after', sa.Integer(), nullable=False, server_default='15'),
            'pin_auto_generation_enabled': sa.Column('pin_auto_generation_enabled', sa.Boolean(), nullable=False, server_default=sa.true()),
            'pin_length': sa.Column('pin_length', sa.Integer(), nullable=False, server_default='6'),
            'pin_allow_manual_override': sa.Column('pin_allow_manual_override', sa.Boolean(), nullable=False, server_default=sa.true()),
            'resource_checkin_url_requires_login': sa.Column('resource_checkin_url_requires_login', sa.Boolean(), nullable=False, server_default=sa.true())
        }

        for col_name, col_obj in columns_to_add_to_booking_settings.items():
            if col_name not in booking_settings_columns:
                with op.batch_alter_table('booking_settings', schema=None) as batch_op:
                    batch_op.add_column(col_obj)

    # 4. Add 'is_active' to 'user' table
    # Ensure 'user' table exists
    if 'user' in all_tables:
        user_columns = [col['name'] for col in inspector.get_columns('user')]
        if 'is_active' not in user_columns:
            with op.batch_alter_table('user', schema=None) as batch_op:
                batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.true()))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('is_active')

    with op.batch_alter_table('booking_settings', schema=None) as batch_op:
        batch_op.drop_column('resource_checkin_url_requires_login')
        batch_op.drop_column('pin_allow_manual_override')
        batch_op.drop_column('pin_length')
        batch_op.drop_column('pin_auto_generation_enabled')
        batch_op.drop_column('check_in_minutes_after')
        batch_op.drop_column('check_in_minutes_before')

    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.drop_column('last_modified')

    op.drop_table('resource_pin')
    # ### end Alembic commands ###
